list = ['10', '20', '30']
text1 = "Great Russia"
text2 = "Hi Hello hi hello H 10,20,30,100-200"

a = " ".join(list) #Метод join собирает список строк в одну строку с разделителем, который указан перед join
print (a)

b = text1.upper() #Методы upper(), lower(), swapcase(), capitalize() выполняют преобразование регистра строки
print (b)

c = text1.lower()
print (c)

d = text1.swapcase()
print (d)

g = text1.capitalize()
print (g)

h = text2.count("l") #Метод count() используется для подсчета того, сколько раз символ или подстрока встречаются в строке
print (h)

y = text1.find("Russia") #Методу find() можно передать подстроку или символ, и он покажет, на какой позиции находится первый символ подстроки (для первого совпадения)
print (y)

k = text1[6 : ]
print (k)

u = text1.startswith("G") # Проверка на то, начинается или заканчивается ли строка на определенные символы (методы startswith(), endswith())
print (u)

i = text1.endswith("a")
print (i)

aa = text2.startswith(("a", "H")) #Методам startswith() и endswith() можно передавать несколько значений (обязательно как кортеж)
print (aa)

bb = text1.replace("Great", "Bad") #Замена последовательности символов в строке на другую последовательность (метод replace())
print (bb)

text3 = "\n[Happy new year]\n"
print (text3)

gg = text3.strip() #Eсть какие-то спецсимволы. Для того, чтобы избавиться от них, очень удобно использовать метод strip()
print (gg)

hh = gg.strip("[]") #Методу strip можно передать как аргумент любые символы. Тогда в начале и в конце строки будут удалены все символы, которые были указаны в строке
print (hh)

kk = text2.split() #Метод split() разбивает строку на части, используя как разделитель какой-то символ (или символы) и возвращает список строк
print (kk)

ll = kk[5].split(",") #По умолчанию в качестве разделителя используются пробельные символы (пробелы, табы, перевод строки), но в скобках можно указать любой разделитель
print (ll)

ip = "123.543.567.7"
oo = ip.split(".") #Пример разделения адреса на октеты
print (oo)